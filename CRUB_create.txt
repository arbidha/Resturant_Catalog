python



from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database_setup import Base, Restaurant, MenuItem

engine = create_engine('sqlite:///restaurantmenu.db')

Base.metadata.bind = engine
DBSession = sessionmaker(bind = engine)
session = DBSession()

myFirstRestaurant = Restaurant(name = "Pizza Place")
session.add(myFirstRestaurant)
session.commit()

# Check if added to database
session.query(Restaurant).all()

cheesepizza = MenuItem(name = "Cheese Pizza", course = "Entree ", price = "$8.99", restaurant = myFirstRestaurant)
session.add(cheesepizza)
session.commit()

session.query(MenuItem).all()

#Read single
firstResult = session.query(Restaurant).first()
firstResult.name
#o/p : 'Pizza Place'

	items = session.query(MenuItem).all()
for item in items:
    print item.name

item - session.query(MenuItem)
print item
op:
SELECT menu_item.name AS menu_item_name,
     menu_item.id AS menu_item_id, 
     menu_item.description AS menu_item_description, 
     menu_item.price AS menu_item_price, 
     menu_item.course AS menu_item_course, 
     menu_item.restaurant_id AS menu_item_restaurant_id
FROM menu_item

#update
    #1 Find the entry
        veggieBurgers = session.query(MenuItem).filter_by(name = 'Veggie Burger')

        for veggieBurger in veggieBurgers:
            print veggieBurger.id
            print veggieBurger.price
            print veggieBurger.restaurant.name
            print '\n'

        urbanVeggieBurger = session.query(MenuItem).filter_by(id = 9).one()
        # check the price with the print statement
        print urbanVeggieBurger.price

    #2 Reset the entry
        urbanVeggieBurger = '$2.99'
    # 3 add to session
        session.add(urbanVeggieBurger)
    # session commit
        session.commit()

# update multiple entry

    for veggieBurger in veggieBurgers:
        if veggieBurger.price != '$2.99':
            veggieBurger.price = '$2.99'
            session.add(veggieBurger)
            session.commit()

# Delete
    #1. Find the entry
        spinach = session.query(MenuItem).filter_by(name ='Spinach Ice Cream').one()
        print spinach.restaurant.name 
    #2. session Delete
        session.delete(spinach)
    #3. session commit
        session.commit()
